/*
 * Radarr
 *
 * Radarr API docs
 *
 * The version of the OpenAPI document: 3.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Radarr.OpenAPI.Client.OpenAPIDateConverter;

namespace Radarr.OpenAPI.Model
{
    /// <summary>
    /// TagDetailsResource
    /// </summary>
    [DataContract(Name = "TagDetailsResource")]
    public partial class TagDetailsResource : IEquatable<TagDetailsResource>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TagDetailsResource" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="label">label.</param>
        /// <param name="delayProfileIds">delayProfileIds.</param>
        /// <param name="importListIds">importListIds.</param>
        /// <param name="notificationIds">notificationIds.</param>
        /// <param name="releaseProfileIds">releaseProfileIds.</param>
        /// <param name="indexerIds">indexerIds.</param>
        /// <param name="downloadClientIds">downloadClientIds.</param>
        /// <param name="autoTagIds">autoTagIds.</param>
        /// <param name="movieIds">movieIds.</param>
        public TagDetailsResource(int id = default(int), string label = default(string), List<int> delayProfileIds = default(List<int>), List<int> importListIds = default(List<int>), List<int> notificationIds = default(List<int>), List<int> releaseProfileIds = default(List<int>), List<int> indexerIds = default(List<int>), List<int> downloadClientIds = default(List<int>), List<int> autoTagIds = default(List<int>), List<int> movieIds = default(List<int>))
        {
            this.Id = id;
            this.Label = label;
            this.DelayProfileIds = delayProfileIds;
            this.ImportListIds = importListIds;
            this.NotificationIds = notificationIds;
            this.ReleaseProfileIds = releaseProfileIds;
            this.IndexerIds = indexerIds;
            this.DownloadClientIds = downloadClientIds;
            this.AutoTagIds = autoTagIds;
            this.MovieIds = movieIds;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Label
        /// </summary>
        [DataMember(Name = "label", EmitDefaultValue = true)]
        public string Label { get; set; }

        /// <summary>
        /// Gets or Sets DelayProfileIds
        /// </summary>
        [DataMember(Name = "delayProfileIds", EmitDefaultValue = true)]
        public List<int> DelayProfileIds { get; set; }

        /// <summary>
        /// Gets or Sets ImportListIds
        /// </summary>
        [DataMember(Name = "importListIds", EmitDefaultValue = true)]
        public List<int> ImportListIds { get; set; }

        /// <summary>
        /// Gets or Sets NotificationIds
        /// </summary>
        [DataMember(Name = "notificationIds", EmitDefaultValue = true)]
        public List<int> NotificationIds { get; set; }

        /// <summary>
        /// Gets or Sets ReleaseProfileIds
        /// </summary>
        [DataMember(Name = "releaseProfileIds", EmitDefaultValue = true)]
        public List<int> ReleaseProfileIds { get; set; }

        /// <summary>
        /// Gets or Sets IndexerIds
        /// </summary>
        [DataMember(Name = "indexerIds", EmitDefaultValue = true)]
        public List<int> IndexerIds { get; set; }

        /// <summary>
        /// Gets or Sets DownloadClientIds
        /// </summary>
        [DataMember(Name = "downloadClientIds", EmitDefaultValue = true)]
        public List<int> DownloadClientIds { get; set; }

        /// <summary>
        /// Gets or Sets AutoTagIds
        /// </summary>
        [DataMember(Name = "autoTagIds", EmitDefaultValue = true)]
        public List<int> AutoTagIds { get; set; }

        /// <summary>
        /// Gets or Sets MovieIds
        /// </summary>
        [DataMember(Name = "movieIds", EmitDefaultValue = true)]
        public List<int> MovieIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TagDetailsResource {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Label: ").Append(Label).Append("\n");
            sb.Append("  DelayProfileIds: ").Append(DelayProfileIds).Append("\n");
            sb.Append("  ImportListIds: ").Append(ImportListIds).Append("\n");
            sb.Append("  NotificationIds: ").Append(NotificationIds).Append("\n");
            sb.Append("  ReleaseProfileIds: ").Append(ReleaseProfileIds).Append("\n");
            sb.Append("  IndexerIds: ").Append(IndexerIds).Append("\n");
            sb.Append("  DownloadClientIds: ").Append(DownloadClientIds).Append("\n");
            sb.Append("  AutoTagIds: ").Append(AutoTagIds).Append("\n");
            sb.Append("  MovieIds: ").Append(MovieIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TagDetailsResource);
        }

        /// <summary>
        /// Returns true if TagDetailsResource instances are equal
        /// </summary>
        /// <param name="input">Instance of TagDetailsResource to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TagDetailsResource input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && 
                (
                    this.Label == input.Label ||
                    (this.Label != null &&
                    this.Label.Equals(input.Label))
                ) && 
                (
                    this.DelayProfileIds == input.DelayProfileIds ||
                    this.DelayProfileIds != null &&
                    input.DelayProfileIds != null &&
                    this.DelayProfileIds.SequenceEqual(input.DelayProfileIds)
                ) && 
                (
                    this.ImportListIds == input.ImportListIds ||
                    this.ImportListIds != null &&
                    input.ImportListIds != null &&
                    this.ImportListIds.SequenceEqual(input.ImportListIds)
                ) && 
                (
                    this.NotificationIds == input.NotificationIds ||
                    this.NotificationIds != null &&
                    input.NotificationIds != null &&
                    this.NotificationIds.SequenceEqual(input.NotificationIds)
                ) && 
                (
                    this.ReleaseProfileIds == input.ReleaseProfileIds ||
                    this.ReleaseProfileIds != null &&
                    input.ReleaseProfileIds != null &&
                    this.ReleaseProfileIds.SequenceEqual(input.ReleaseProfileIds)
                ) && 
                (
                    this.IndexerIds == input.IndexerIds ||
                    this.IndexerIds != null &&
                    input.IndexerIds != null &&
                    this.IndexerIds.SequenceEqual(input.IndexerIds)
                ) && 
                (
                    this.DownloadClientIds == input.DownloadClientIds ||
                    this.DownloadClientIds != null &&
                    input.DownloadClientIds != null &&
                    this.DownloadClientIds.SequenceEqual(input.DownloadClientIds)
                ) && 
                (
                    this.AutoTagIds == input.AutoTagIds ||
                    this.AutoTagIds != null &&
                    input.AutoTagIds != null &&
                    this.AutoTagIds.SequenceEqual(input.AutoTagIds)
                ) && 
                (
                    this.MovieIds == input.MovieIds ||
                    this.MovieIds != null &&
                    input.MovieIds != null &&
                    this.MovieIds.SequenceEqual(input.MovieIds)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Label != null)
                    hashCode = hashCode * 59 + this.Label.GetHashCode();
                if (this.DelayProfileIds != null)
                    hashCode = hashCode * 59 + this.DelayProfileIds.GetHashCode();
                if (this.ImportListIds != null)
                    hashCode = hashCode * 59 + this.ImportListIds.GetHashCode();
                if (this.NotificationIds != null)
                    hashCode = hashCode * 59 + this.NotificationIds.GetHashCode();
                if (this.ReleaseProfileIds != null)
                    hashCode = hashCode * 59 + this.ReleaseProfileIds.GetHashCode();
                if (this.IndexerIds != null)
                    hashCode = hashCode * 59 + this.IndexerIds.GetHashCode();
                if (this.DownloadClientIds != null)
                    hashCode = hashCode * 59 + this.DownloadClientIds.GetHashCode();
                if (this.AutoTagIds != null)
                    hashCode = hashCode * 59 + this.AutoTagIds.GetHashCode();
                if (this.MovieIds != null)
                    hashCode = hashCode * 59 + this.MovieIds.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
