/*
 * Sonarr
 *
 * Sonarr API docs - The v3 API docs apply to both v3 and v4 versions of Sonarr. Some functionality may only be available in v4 of the Sonarr application.
 *
 * The version of the OpenAPI document: 3.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Sonarr.OpenAPI.Client.OpenAPIDateConverter;

namespace Sonarr.OpenAPI.Model
{
    /// <summary>
    /// Defines MonitorTypes
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum MonitorTypes
    {
        /// <summary>
        /// Enum Unknown for value: unknown
        /// </summary>
        [EnumMember(Value = "unknown")]
        Unknown = 1,

        /// <summary>
        /// Enum All for value: all
        /// </summary>
        [EnumMember(Value = "all")]
        All = 2,

        /// <summary>
        /// Enum Future for value: future
        /// </summary>
        [EnumMember(Value = "future")]
        Future = 3,

        /// <summary>
        /// Enum Missing for value: missing
        /// </summary>
        [EnumMember(Value = "missing")]
        Missing = 4,

        /// <summary>
        /// Enum Existing for value: existing
        /// </summary>
        [EnumMember(Value = "existing")]
        Existing = 5,

        /// <summary>
        /// Enum FirstSeason for value: firstSeason
        /// </summary>
        [EnumMember(Value = "firstSeason")]
        FirstSeason = 6,

        /// <summary>
        /// Enum LatestSeason for value: latestSeason
        /// </summary>
        [EnumMember(Value = "latestSeason")]
        LatestSeason = 7,

        /// <summary>
        /// Enum Pilot for value: pilot
        /// </summary>
        [EnumMember(Value = "pilot")]
        Pilot = 8,

        /// <summary>
        /// Enum MonitorSpecials for value: monitorSpecials
        /// </summary>
        [EnumMember(Value = "monitorSpecials")]
        MonitorSpecials = 9,

        /// <summary>
        /// Enum UnmonitorSpecials for value: unmonitorSpecials
        /// </summary>
        [EnumMember(Value = "unmonitorSpecials")]
        UnmonitorSpecials = 10,

        /// <summary>
        /// Enum None for value: none
        /// </summary>
        [EnumMember(Value = "none")]
        None = 11

    }

}
