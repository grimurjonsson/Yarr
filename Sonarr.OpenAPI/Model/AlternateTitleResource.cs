/*
 * Sonarr
 *
 * Sonarr API docs - The v3 API docs apply to both v3 and v4 versions of Sonarr. Some functionality may only be available in v4 of the Sonarr application.
 *
 * The version of the OpenAPI document: 3.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Sonarr.OpenAPI.Client.OpenAPIDateConverter;

namespace Sonarr.OpenAPI.Model
{
    /// <summary>
    /// AlternateTitleResource
    /// </summary>
    [DataContract(Name = "AlternateTitleResource")]
    public partial class AlternateTitleResource : IEquatable<AlternateTitleResource>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlternateTitleResource" /> class.
        /// </summary>
        /// <param name="title">title.</param>
        /// <param name="seasonNumber">seasonNumber.</param>
        /// <param name="sceneSeasonNumber">sceneSeasonNumber.</param>
        /// <param name="sceneOrigin">sceneOrigin.</param>
        /// <param name="comment">comment.</param>
        public AlternateTitleResource(string title = default(string), int? seasonNumber = default(int?), int? sceneSeasonNumber = default(int?), string sceneOrigin = default(string), string comment = default(string))
        {
            this.Title = title;
            this.SeasonNumber = seasonNumber;
            this.SceneSeasonNumber = sceneSeasonNumber;
            this.SceneOrigin = sceneOrigin;
            this.Comment = comment;
        }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name = "title", EmitDefaultValue = true)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets SeasonNumber
        /// </summary>
        [DataMember(Name = "seasonNumber", EmitDefaultValue = true)]
        public int? SeasonNumber { get; set; }

        /// <summary>
        /// Gets or Sets SceneSeasonNumber
        /// </summary>
        [DataMember(Name = "sceneSeasonNumber", EmitDefaultValue = true)]
        public int? SceneSeasonNumber { get; set; }

        /// <summary>
        /// Gets or Sets SceneOrigin
        /// </summary>
        [DataMember(Name = "sceneOrigin", EmitDefaultValue = true)]
        public string SceneOrigin { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name = "comment", EmitDefaultValue = true)]
        public string Comment { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AlternateTitleResource {\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  SeasonNumber: ").Append(SeasonNumber).Append("\n");
            sb.Append("  SceneSeasonNumber: ").Append(SceneSeasonNumber).Append("\n");
            sb.Append("  SceneOrigin: ").Append(SceneOrigin).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlternateTitleResource);
        }

        /// <summary>
        /// Returns true if AlternateTitleResource instances are equal
        /// </summary>
        /// <param name="input">Instance of AlternateTitleResource to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlternateTitleResource input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.SeasonNumber == input.SeasonNumber ||
                    (this.SeasonNumber != null &&
                    this.SeasonNumber.Equals(input.SeasonNumber))
                ) && 
                (
                    this.SceneSeasonNumber == input.SceneSeasonNumber ||
                    (this.SceneSeasonNumber != null &&
                    this.SceneSeasonNumber.Equals(input.SceneSeasonNumber))
                ) && 
                (
                    this.SceneOrigin == input.SceneOrigin ||
                    (this.SceneOrigin != null &&
                    this.SceneOrigin.Equals(input.SceneOrigin))
                ) && 
                (
                    this.Comment == input.Comment ||
                    (this.Comment != null &&
                    this.Comment.Equals(input.Comment))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.SeasonNumber != null)
                    hashCode = hashCode * 59 + this.SeasonNumber.GetHashCode();
                if (this.SceneSeasonNumber != null)
                    hashCode = hashCode * 59 + this.SceneSeasonNumber.GetHashCode();
                if (this.SceneOrigin != null)
                    hashCode = hashCode * 59 + this.SceneOrigin.GetHashCode();
                if (this.Comment != null)
                    hashCode = hashCode * 59 + this.Comment.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
