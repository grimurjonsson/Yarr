/*
 * Sonarr
 *
 * Sonarr API docs - The v3 API docs apply to both v3 and v4 versions of Sonarr. Some functionality may only be available in v4 of the Sonarr application.
 *
 * The version of the OpenAPI document: 3.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Sonarr.OpenAPI.Client.OpenAPIDateConverter;
#pragma warning disable CS0612 // Type or member is obsolete

namespace Sonarr.OpenAPI.Model
{
    /// <summary>
    /// SeriesResource
    /// </summary>
    [DataContract(Name = "SeriesResource")]
    public partial class SeriesResource : IEquatable<SeriesResource>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public SeriesStatusType? Status { get; set; }

        /// <summary>
        /// Gets or Sets SeriesType
        /// </summary>
        [DataMember(Name = "seriesType", EmitDefaultValue = false)]
        public SeriesTypes? SeriesType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SeriesResource" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="title">title.</param>
        /// <param name="alternateTitles">alternateTitles.</param>
        /// <param name="sortTitle">sortTitle.</param>
        /// <param name="status">status.</param>
        /// <param name="profileName">profileName.</param>
        /// <param name="overview">overview.</param>
        /// <param name="nextAiring">nextAiring.</param>
        /// <param name="previousAiring">previousAiring.</param>
        /// <param name="network">network.</param>
        /// <param name="airTime">airTime.</param>
        /// <param name="images">images.</param>
        /// <param name="originalLanguage">originalLanguage.</param>
        /// <param name="remotePoster">remotePoster.</param>
        /// <param name="seasons">seasons.</param>
        /// <param name="year">year.</param>
        /// <param name="path">path.</param>
        /// <param name="qualityProfileId">qualityProfileId.</param>
        /// <param name="seasonFolder">seasonFolder.</param>
        /// <param name="monitored">monitored.</param>
        /// <param name="useSceneNumbering">useSceneNumbering.</param>
        /// <param name="runtime">runtime.</param>
        /// <param name="tvdbId">tvdbId.</param>
        /// <param name="tvRageId">tvRageId.</param>
        /// <param name="tvMazeId">tvMazeId.</param>
        /// <param name="firstAired">firstAired.</param>
        /// <param name="seriesType">seriesType.</param>
        /// <param name="cleanTitle">cleanTitle.</param>
        /// <param name="imdbId">imdbId.</param>
        /// <param name="titleSlug">titleSlug.</param>
        /// <param name="rootFolderPath">rootFolderPath.</param>
        /// <param name="folder">folder.</param>
        /// <param name="certification">certification.</param>
        /// <param name="genres">genres.</param>
        /// <param name="tags">tags.</param>
        /// <param name="added">added.</param>
        /// <param name="addOptions">addOptions.</param>
        /// <param name="ratings">ratings.</param>
        /// <param name="statistics">statistics.</param>
        /// <param name="episodesChanged">episodesChanged.</param>
        public SeriesResource(int id = default(int), string title = default(string), List<AlternateTitleResource> alternateTitles = default(List<AlternateTitleResource>), string sortTitle = default(string), SeriesStatusType? status = default(SeriesStatusType?), string profileName = default(string), string overview = default(string), DateTime? nextAiring = default(DateTime?), DateTime? previousAiring = default(DateTime?), string network = default(string), string airTime = default(string), List<MediaCover> images = default(List<MediaCover>), Language originalLanguage = default(Language), string remotePoster = default(string), List<SeasonResource> seasons = default(List<SeasonResource>), int year = default(int), string path = default(string), int qualityProfileId = default(int), bool seasonFolder = default(bool), bool monitored = default(bool), bool useSceneNumbering = default(bool), int runtime = default(int), int tvdbId = default(int), int tvRageId = default(int), int tvMazeId = default(int), DateTime? firstAired = default(DateTime?), SeriesTypes? seriesType = default(SeriesTypes?), string cleanTitle = default(string), string imdbId = default(string), string titleSlug = default(string), string rootFolderPath = default(string), string folder = default(string), string certification = default(string), List<string> genres = default(List<string>), List<int> tags = default(List<int>), DateTime added = default(DateTime), AddSeriesOptions addOptions = default(AddSeriesOptions), Ratings ratings = default(Ratings), SeriesStatisticsResource statistics = default(SeriesStatisticsResource), bool? episodesChanged = default(bool?))
        {
            this.Id = id;
            this.Title = title;
            this.AlternateTitles = alternateTitles;
            this.SortTitle = sortTitle;
            this.Status = status;
            this.ProfileName = profileName;
            this.Overview = overview;
            this.NextAiring = nextAiring;
            this.PreviousAiring = previousAiring;
            this.Network = network;
            this.AirTime = airTime;
            this.Images = images;
            this.OriginalLanguage = originalLanguage;
            this.RemotePoster = remotePoster;
            this.Seasons = seasons;
            this.Year = year;
            this.Path = path;
            this.QualityProfileId = qualityProfileId;
            this.SeasonFolder = seasonFolder;
            this.Monitored = monitored;
            this.UseSceneNumbering = useSceneNumbering;
            this.Runtime = runtime;
            this.TvdbId = tvdbId;
            this.TvRageId = tvRageId;
            this.TvMazeId = tvMazeId;
            this.FirstAired = firstAired;
            this.SeriesType = seriesType;
            this.CleanTitle = cleanTitle;
            this.ImdbId = imdbId;
            this.TitleSlug = titleSlug;
            this.RootFolderPath = rootFolderPath;
            this.Folder = folder;
            this.Certification = certification;
            this.Genres = genres;
            this.Tags = tags;
            this.Added = added;
            this.AddOptions = addOptions;
            this.Ratings = ratings;
            this.Statistics = statistics;
            this.EpisodesChanged = episodesChanged;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name = "title", EmitDefaultValue = true)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets AlternateTitles
        /// </summary>
        [DataMember(Name = "alternateTitles", EmitDefaultValue = true)]
        public List<AlternateTitleResource> AlternateTitles { get; set; }

        /// <summary>
        /// Gets or Sets SortTitle
        /// </summary>
        [DataMember(Name = "sortTitle", EmitDefaultValue = true)]
        public string SortTitle { get; set; }

        /// <summary>
        /// Gets or Sets Ended
        /// </summary>
        [DataMember(Name = "ended", EmitDefaultValue = true)]
        public bool Ended { get; private set; }

        /// <summary>
        /// Returns false as Ended should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeEnded()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets ProfileName
        /// </summary>
        [DataMember(Name = "profileName", EmitDefaultValue = true)]
        public string ProfileName { get; set; }

        /// <summary>
        /// Gets or Sets Overview
        /// </summary>
        [DataMember(Name = "overview", EmitDefaultValue = true)]
        public string Overview { get; set; }

        /// <summary>
        /// Gets or Sets NextAiring
        /// </summary>
        [DataMember(Name = "nextAiring", EmitDefaultValue = true)]
        public DateTime? NextAiring { get; set; }

        /// <summary>
        /// Gets or Sets PreviousAiring
        /// </summary>
        [DataMember(Name = "previousAiring", EmitDefaultValue = true)]
        public DateTime? PreviousAiring { get; set; }

        /// <summary>
        /// Gets or Sets Network
        /// </summary>
        [DataMember(Name = "network", EmitDefaultValue = true)]
        public string Network { get; set; }

        /// <summary>
        /// Gets or Sets AirTime
        /// </summary>
        [DataMember(Name = "airTime", EmitDefaultValue = true)]
        public string AirTime { get; set; }

        /// <summary>
        /// Gets or Sets Images
        /// </summary>
        [DataMember(Name = "images", EmitDefaultValue = true)]
        public List<MediaCover> Images { get; set; }

        /// <summary>
        /// Gets or Sets OriginalLanguage
        /// </summary>
        [DataMember(Name = "originalLanguage", EmitDefaultValue = false)]
        public Language OriginalLanguage { get; set; }

        /// <summary>
        /// Gets or Sets RemotePoster
        /// </summary>
        [DataMember(Name = "remotePoster", EmitDefaultValue = true)]
        public string RemotePoster { get; set; }

        /// <summary>
        /// Gets or Sets Seasons
        /// </summary>
        [DataMember(Name = "seasons", EmitDefaultValue = true)]
        public List<SeasonResource> Seasons { get; set; }

        /// <summary>
        /// Gets or Sets Year
        /// </summary>
        [DataMember(Name = "year", EmitDefaultValue = false)]
        public int Year { get; set; }

        /// <summary>
        /// Gets or Sets Path
        /// </summary>
        [DataMember(Name = "path", EmitDefaultValue = true)]
        public string Path { get; set; }

        /// <summary>
        /// Gets or Sets QualityProfileId
        /// </summary>
        [DataMember(Name = "qualityProfileId", EmitDefaultValue = false)]
        public int QualityProfileId { get; set; }

        /// <summary>
        /// Gets or Sets SeasonFolder
        /// </summary>
        [DataMember(Name = "seasonFolder", EmitDefaultValue = true)]
        public bool SeasonFolder { get; set; }

        /// <summary>
        /// Gets or Sets Monitored
        /// </summary>
        [DataMember(Name = "monitored", EmitDefaultValue = true)]
        public bool Monitored { get; set; }

        /// <summary>
        /// Gets or Sets UseSceneNumbering
        /// </summary>
        [DataMember(Name = "useSceneNumbering", EmitDefaultValue = true)]
        public bool UseSceneNumbering { get; set; }

        /// <summary>
        /// Gets or Sets Runtime
        /// </summary>
        [DataMember(Name = "runtime", EmitDefaultValue = false)]
        public int Runtime { get; set; }

        /// <summary>
        /// Gets or Sets TvdbId
        /// </summary>
        [DataMember(Name = "tvdbId", EmitDefaultValue = false)]
        public int TvdbId { get; set; }

        /// <summary>
        /// Gets or Sets TvRageId
        /// </summary>
        [DataMember(Name = "tvRageId", EmitDefaultValue = false)]
        public int TvRageId { get; set; }

        /// <summary>
        /// Gets or Sets TvMazeId
        /// </summary>
        [DataMember(Name = "tvMazeId", EmitDefaultValue = false)]
        public int TvMazeId { get; set; }

        /// <summary>
        /// Gets or Sets FirstAired
        /// </summary>
        [DataMember(Name = "firstAired", EmitDefaultValue = true)]
        public DateTime? FirstAired { get; set; }

        /// <summary>
        /// Gets or Sets CleanTitle
        /// </summary>
        [DataMember(Name = "cleanTitle", EmitDefaultValue = true)]
        public string CleanTitle { get; set; }

        /// <summary>
        /// Gets or Sets ImdbId
        /// </summary>
        [DataMember(Name = "imdbId", EmitDefaultValue = true)]
        public string ImdbId { get; set; }

        /// <summary>
        /// Gets or Sets TitleSlug
        /// </summary>
        [DataMember(Name = "titleSlug", EmitDefaultValue = true)]
        public string TitleSlug { get; set; }

        /// <summary>
        /// Gets or Sets RootFolderPath
        /// </summary>
        [DataMember(Name = "rootFolderPath", EmitDefaultValue = true)]
        public string RootFolderPath { get; set; }

        /// <summary>
        /// Gets or Sets Folder
        /// </summary>
        [DataMember(Name = "folder", EmitDefaultValue = true)]
        public string Folder { get; set; }

        /// <summary>
        /// Gets or Sets Certification
        /// </summary>
        [DataMember(Name = "certification", EmitDefaultValue = true)]
        public string Certification { get; set; }

        /// <summary>
        /// Gets or Sets Genres
        /// </summary>
        [DataMember(Name = "genres", EmitDefaultValue = true)]
        public List<string> Genres { get; set; }

        /// <summary>
        /// Gets or Sets Tags
        /// </summary>
        [DataMember(Name = "tags", EmitDefaultValue = true)]
        public List<int> Tags { get; set; }

        /// <summary>
        /// Gets or Sets Added
        /// </summary>
        [DataMember(Name = "added", EmitDefaultValue = false)]
        public DateTime Added { get; set; }

        /// <summary>
        /// Gets or Sets AddOptions
        /// </summary>
        [DataMember(Name = "addOptions", EmitDefaultValue = false)]
        public AddSeriesOptions AddOptions { get; set; }

        /// <summary>
        /// Gets or Sets Ratings
        /// </summary>
        [DataMember(Name = "ratings", EmitDefaultValue = false)]
        public Ratings Ratings { get; set; }

        /// <summary>
        /// Gets or Sets Statistics
        /// </summary>
        [DataMember(Name = "statistics", EmitDefaultValue = false)]
        public SeriesStatisticsResource Statistics { get; set; }

        /// <summary>
        /// Gets or Sets EpisodesChanged
        /// </summary>
        [DataMember(Name = "episodesChanged", EmitDefaultValue = true)]
        public bool? EpisodesChanged { get; set; }

        /// <summary>
        /// Gets or Sets LanguageProfileId
        /// </summary>
        [DataMember(Name = "languageProfileId", EmitDefaultValue = false)]
        [Obsolete]
        public int LanguageProfileId { get; private set; }

        
        // Removing this, cause of bug with not serializing a required LanguageProfileId
        // /// <summary>
        // /// Returns false as LanguageProfileId should not be serialized given that it's read-only.
        // /// </summary>
        // /// <returns>false (boolean)</returns>
        // public bool ShouldSerializeLanguageProfileId()
        // {
        //     return false;
        // }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SeriesResource {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  AlternateTitles: ").Append(AlternateTitles).Append("\n");
            sb.Append("  SortTitle: ").Append(SortTitle).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Ended: ").Append(Ended).Append("\n");
            sb.Append("  ProfileName: ").Append(ProfileName).Append("\n");
            sb.Append("  Overview: ").Append(Overview).Append("\n");
            sb.Append("  NextAiring: ").Append(NextAiring).Append("\n");
            sb.Append("  PreviousAiring: ").Append(PreviousAiring).Append("\n");
            sb.Append("  Network: ").Append(Network).Append("\n");
            sb.Append("  AirTime: ").Append(AirTime).Append("\n");
            sb.Append("  Images: ").Append(Images).Append("\n");
            sb.Append("  OriginalLanguage: ").Append(OriginalLanguage).Append("\n");
            sb.Append("  RemotePoster: ").Append(RemotePoster).Append("\n");
            sb.Append("  Seasons: ").Append(Seasons).Append("\n");
            sb.Append("  Year: ").Append(Year).Append("\n");
            sb.Append("  Path: ").Append(Path).Append("\n");
            sb.Append("  QualityProfileId: ").Append(QualityProfileId).Append("\n");
            sb.Append("  SeasonFolder: ").Append(SeasonFolder).Append("\n");
            sb.Append("  Monitored: ").Append(Monitored).Append("\n");
            sb.Append("  UseSceneNumbering: ").Append(UseSceneNumbering).Append("\n");
            sb.Append("  Runtime: ").Append(Runtime).Append("\n");
            sb.Append("  TvdbId: ").Append(TvdbId).Append("\n");
            sb.Append("  TvRageId: ").Append(TvRageId).Append("\n");
            sb.Append("  TvMazeId: ").Append(TvMazeId).Append("\n");
            sb.Append("  FirstAired: ").Append(FirstAired).Append("\n");
            sb.Append("  SeriesType: ").Append(SeriesType).Append("\n");
            sb.Append("  CleanTitle: ").Append(CleanTitle).Append("\n");
            sb.Append("  ImdbId: ").Append(ImdbId).Append("\n");
            sb.Append("  TitleSlug: ").Append(TitleSlug).Append("\n");
            sb.Append("  RootFolderPath: ").Append(RootFolderPath).Append("\n");
            sb.Append("  Folder: ").Append(Folder).Append("\n");
            sb.Append("  Certification: ").Append(Certification).Append("\n");
            sb.Append("  Genres: ").Append(Genres).Append("\n");
            sb.Append("  Tags: ").Append(Tags).Append("\n");
            sb.Append("  Added: ").Append(Added).Append("\n");
            sb.Append("  AddOptions: ").Append(AddOptions).Append("\n");
            sb.Append("  Ratings: ").Append(Ratings).Append("\n");
            sb.Append("  Statistics: ").Append(Statistics).Append("\n");
            sb.Append("  EpisodesChanged: ").Append(EpisodesChanged).Append("\n");
            sb.Append("  LanguageProfileId: ").Append(LanguageProfileId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SeriesResource);
        }

        /// <summary>
        /// Returns true if SeriesResource instances are equal
        /// </summary>
        /// <param name="input">Instance of SeriesResource to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SeriesResource input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.AlternateTitles == input.AlternateTitles ||
                    this.AlternateTitles != null &&
                    input.AlternateTitles != null &&
                    this.AlternateTitles.SequenceEqual(input.AlternateTitles)
                ) && 
                (
                    this.SortTitle == input.SortTitle ||
                    (this.SortTitle != null &&
                    this.SortTitle.Equals(input.SortTitle))
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                ) && 
                (
                    this.Ended == input.Ended ||
                    this.Ended.Equals(input.Ended)
                ) && 
                (
                    this.ProfileName == input.ProfileName ||
                    (this.ProfileName != null &&
                    this.ProfileName.Equals(input.ProfileName))
                ) && 
                (
                    this.Overview == input.Overview ||
                    (this.Overview != null &&
                    this.Overview.Equals(input.Overview))
                ) && 
                (
                    this.NextAiring == input.NextAiring ||
                    (this.NextAiring != null &&
                    this.NextAiring.Equals(input.NextAiring))
                ) && 
                (
                    this.PreviousAiring == input.PreviousAiring ||
                    (this.PreviousAiring != null &&
                    this.PreviousAiring.Equals(input.PreviousAiring))
                ) && 
                (
                    this.Network == input.Network ||
                    (this.Network != null &&
                    this.Network.Equals(input.Network))
                ) && 
                (
                    this.AirTime == input.AirTime ||
                    (this.AirTime != null &&
                    this.AirTime.Equals(input.AirTime))
                ) && 
                (
                    this.Images == input.Images ||
                    this.Images != null &&
                    input.Images != null &&
                    this.Images.SequenceEqual(input.Images)
                ) && 
                (
                    this.OriginalLanguage == input.OriginalLanguage ||
                    (this.OriginalLanguage != null &&
                    this.OriginalLanguage.Equals(input.OriginalLanguage))
                ) && 
                (
                    this.RemotePoster == input.RemotePoster ||
                    (this.RemotePoster != null &&
                    this.RemotePoster.Equals(input.RemotePoster))
                ) && 
                (
                    this.Seasons == input.Seasons ||
                    this.Seasons != null &&
                    input.Seasons != null &&
                    this.Seasons.SequenceEqual(input.Seasons)
                ) && 
                (
                    this.Year == input.Year ||
                    this.Year.Equals(input.Year)
                ) && 
                (
                    this.Path == input.Path ||
                    (this.Path != null &&
                    this.Path.Equals(input.Path))
                ) && 
                (
                    this.QualityProfileId == input.QualityProfileId ||
                    this.QualityProfileId.Equals(input.QualityProfileId)
                ) && 
                (
                    this.SeasonFolder == input.SeasonFolder ||
                    this.SeasonFolder.Equals(input.SeasonFolder)
                ) && 
                (
                    this.Monitored == input.Monitored ||
                    this.Monitored.Equals(input.Monitored)
                ) && 
                (
                    this.UseSceneNumbering == input.UseSceneNumbering ||
                    this.UseSceneNumbering.Equals(input.UseSceneNumbering)
                ) && 
                (
                    this.Runtime == input.Runtime ||
                    this.Runtime.Equals(input.Runtime)
                ) && 
                (
                    this.TvdbId == input.TvdbId ||
                    this.TvdbId.Equals(input.TvdbId)
                ) && 
                (
                    this.TvRageId == input.TvRageId ||
                    this.TvRageId.Equals(input.TvRageId)
                ) && 
                (
                    this.TvMazeId == input.TvMazeId ||
                    this.TvMazeId.Equals(input.TvMazeId)
                ) && 
                (
                    this.FirstAired == input.FirstAired ||
                    (this.FirstAired != null &&
                    this.FirstAired.Equals(input.FirstAired))
                ) && 
                (
                    this.SeriesType == input.SeriesType ||
                    this.SeriesType.Equals(input.SeriesType)
                ) && 
                (
                    this.CleanTitle == input.CleanTitle ||
                    (this.CleanTitle != null &&
                    this.CleanTitle.Equals(input.CleanTitle))
                ) && 
                (
                    this.ImdbId == input.ImdbId ||
                    (this.ImdbId != null &&
                    this.ImdbId.Equals(input.ImdbId))
                ) && 
                (
                    this.TitleSlug == input.TitleSlug ||
                    (this.TitleSlug != null &&
                    this.TitleSlug.Equals(input.TitleSlug))
                ) && 
                (
                    this.RootFolderPath == input.RootFolderPath ||
                    (this.RootFolderPath != null &&
                    this.RootFolderPath.Equals(input.RootFolderPath))
                ) && 
                (
                    this.Folder == input.Folder ||
                    (this.Folder != null &&
                    this.Folder.Equals(input.Folder))
                ) && 
                (
                    this.Certification == input.Certification ||
                    (this.Certification != null &&
                    this.Certification.Equals(input.Certification))
                ) && 
                (
                    this.Genres == input.Genres ||
                    this.Genres != null &&
                    input.Genres != null &&
                    this.Genres.SequenceEqual(input.Genres)
                ) && 
                (
                    this.Tags == input.Tags ||
                    this.Tags != null &&
                    input.Tags != null &&
                    this.Tags.SequenceEqual(input.Tags)
                ) && 
                (
                    this.Added == input.Added ||
                    (this.Added != null &&
                    this.Added.Equals(input.Added))
                ) && 
                (
                    this.AddOptions == input.AddOptions ||
                    (this.AddOptions != null &&
                    this.AddOptions.Equals(input.AddOptions))
                ) && 
                (
                    this.Ratings == input.Ratings ||
                    (this.Ratings != null &&
                    this.Ratings.Equals(input.Ratings))
                ) && 
                (
                    this.Statistics == input.Statistics ||
                    (this.Statistics != null &&
                    this.Statistics.Equals(input.Statistics))
                ) && 
                (
                    this.EpisodesChanged == input.EpisodesChanged ||
                    (this.EpisodesChanged != null &&
                    this.EpisodesChanged.Equals(input.EpisodesChanged))
                ) && 
                (
                    this.LanguageProfileId == input.LanguageProfileId ||
                    this.LanguageProfileId.Equals(input.LanguageProfileId)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.AlternateTitles != null)
                    hashCode = hashCode * 59 + this.AlternateTitles.GetHashCode();
                if (this.SortTitle != null)
                    hashCode = hashCode * 59 + this.SortTitle.GetHashCode();
                hashCode = hashCode * 59 + this.Status.GetHashCode();
                hashCode = hashCode * 59 + this.Ended.GetHashCode();
                if (this.ProfileName != null)
                    hashCode = hashCode * 59 + this.ProfileName.GetHashCode();
                if (this.Overview != null)
                    hashCode = hashCode * 59 + this.Overview.GetHashCode();
                if (this.NextAiring != null)
                    hashCode = hashCode * 59 + this.NextAiring.GetHashCode();
                if (this.PreviousAiring != null)
                    hashCode = hashCode * 59 + this.PreviousAiring.GetHashCode();
                if (this.Network != null)
                    hashCode = hashCode * 59 + this.Network.GetHashCode();
                if (this.AirTime != null)
                    hashCode = hashCode * 59 + this.AirTime.GetHashCode();
                if (this.Images != null)
                    hashCode = hashCode * 59 + this.Images.GetHashCode();
                if (this.OriginalLanguage != null)
                    hashCode = hashCode * 59 + this.OriginalLanguage.GetHashCode();
                if (this.RemotePoster != null)
                    hashCode = hashCode * 59 + this.RemotePoster.GetHashCode();
                if (this.Seasons != null)
                    hashCode = hashCode * 59 + this.Seasons.GetHashCode();
                hashCode = hashCode * 59 + this.Year.GetHashCode();
                if (this.Path != null)
                    hashCode = hashCode * 59 + this.Path.GetHashCode();
                hashCode = hashCode * 59 + this.QualityProfileId.GetHashCode();
                hashCode = hashCode * 59 + this.SeasonFolder.GetHashCode();
                hashCode = hashCode * 59 + this.Monitored.GetHashCode();
                hashCode = hashCode * 59 + this.UseSceneNumbering.GetHashCode();
                hashCode = hashCode * 59 + this.Runtime.GetHashCode();
                hashCode = hashCode * 59 + this.TvdbId.GetHashCode();
                hashCode = hashCode * 59 + this.TvRageId.GetHashCode();
                hashCode = hashCode * 59 + this.TvMazeId.GetHashCode();
                if (this.FirstAired != null)
                    hashCode = hashCode * 59 + this.FirstAired.GetHashCode();
                hashCode = hashCode * 59 + this.SeriesType.GetHashCode();
                if (this.CleanTitle != null)
                    hashCode = hashCode * 59 + this.CleanTitle.GetHashCode();
                if (this.ImdbId != null)
                    hashCode = hashCode * 59 + this.ImdbId.GetHashCode();
                if (this.TitleSlug != null)
                    hashCode = hashCode * 59 + this.TitleSlug.GetHashCode();
                if (this.RootFolderPath != null)
                    hashCode = hashCode * 59 + this.RootFolderPath.GetHashCode();
                if (this.Folder != null)
                    hashCode = hashCode * 59 + this.Folder.GetHashCode();
                if (this.Certification != null)
                    hashCode = hashCode * 59 + this.Certification.GetHashCode();
                if (this.Genres != null)
                    hashCode = hashCode * 59 + this.Genres.GetHashCode();
                if (this.Tags != null)
                    hashCode = hashCode * 59 + this.Tags.GetHashCode();
                if (this.Added != null)
                    hashCode = hashCode * 59 + this.Added.GetHashCode();
                if (this.AddOptions != null)
                    hashCode = hashCode * 59 + this.AddOptions.GetHashCode();
                if (this.Ratings != null)
                    hashCode = hashCode * 59 + this.Ratings.GetHashCode();
                if (this.Statistics != null)
                    hashCode = hashCode * 59 + this.Statistics.GetHashCode();
                if (this.EpisodesChanged != null)
                    hashCode = hashCode * 59 + this.EpisodesChanged.GetHashCode();
                hashCode = hashCode * 59 + this.LanguageProfileId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
