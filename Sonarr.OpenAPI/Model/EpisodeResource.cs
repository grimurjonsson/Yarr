/*
 * Sonarr
 *
 * Sonarr API docs - The v3 API docs apply to both v3 and v4 versions of Sonarr. Some functionality may only be available in v4 of the Sonarr application.
 *
 * The version of the OpenAPI document: 3.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Sonarr.OpenAPI.Client.OpenAPIDateConverter;

namespace Sonarr.OpenAPI.Model
{
    /// <summary>
    /// EpisodeResource
    /// </summary>
    [DataContract(Name = "EpisodeResource")]
    public partial class EpisodeResource : IEquatable<EpisodeResource>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EpisodeResource" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="seriesId">seriesId.</param>
        /// <param name="tvdbId">tvdbId.</param>
        /// <param name="episodeFileId">episodeFileId.</param>
        /// <param name="seasonNumber">seasonNumber.</param>
        /// <param name="episodeNumber">episodeNumber.</param>
        /// <param name="title">title.</param>
        /// <param name="airDate">airDate.</param>
        /// <param name="airDateUtc">airDateUtc.</param>
        /// <param name="runtime">runtime.</param>
        /// <param name="finaleType">finaleType.</param>
        /// <param name="overview">overview.</param>
        /// <param name="episodeFile">episodeFile.</param>
        /// <param name="hasFile">hasFile.</param>
        /// <param name="monitored">monitored.</param>
        /// <param name="absoluteEpisodeNumber">absoluteEpisodeNumber.</param>
        /// <param name="sceneAbsoluteEpisodeNumber">sceneAbsoluteEpisodeNumber.</param>
        /// <param name="sceneEpisodeNumber">sceneEpisodeNumber.</param>
        /// <param name="sceneSeasonNumber">sceneSeasonNumber.</param>
        /// <param name="unverifiedSceneNumbering">unverifiedSceneNumbering.</param>
        /// <param name="endTime">endTime.</param>
        /// <param name="grabDate">grabDate.</param>
        /// <param name="seriesTitle">seriesTitle.</param>
        /// <param name="series">series.</param>
        /// <param name="images">images.</param>
        /// <param name="grabbed">grabbed.</param>
        public EpisodeResource(int id = default(int), int seriesId = default(int), int tvdbId = default(int), int episodeFileId = default(int), int seasonNumber = default(int), int episodeNumber = default(int), string title = default(string), string airDate = default(string), DateTime? airDateUtc = default(DateTime?), int runtime = default(int), string finaleType = default(string), string overview = default(string), EpisodeFileResource episodeFile = default(EpisodeFileResource), bool hasFile = default(bool), bool monitored = default(bool), int? absoluteEpisodeNumber = default(int?), int? sceneAbsoluteEpisodeNumber = default(int?), int? sceneEpisodeNumber = default(int?), int? sceneSeasonNumber = default(int?), bool unverifiedSceneNumbering = default(bool), DateTime? endTime = default(DateTime?), DateTime? grabDate = default(DateTime?), string seriesTitle = default(string), SeriesResource series = default(SeriesResource), List<MediaCover> images = default(List<MediaCover>), bool grabbed = default(bool))
        {
            this.Id = id;
            this.SeriesId = seriesId;
            this.TvdbId = tvdbId;
            this.EpisodeFileId = episodeFileId;
            this.SeasonNumber = seasonNumber;
            this.EpisodeNumber = episodeNumber;
            this.Title = title;
            this.AirDate = airDate;
            this.AirDateUtc = airDateUtc;
            this.Runtime = runtime;
            this.FinaleType = finaleType;
            this.Overview = overview;
            this.EpisodeFile = episodeFile;
            this.HasFile = hasFile;
            this.Monitored = monitored;
            this.AbsoluteEpisodeNumber = absoluteEpisodeNumber;
            this.SceneAbsoluteEpisodeNumber = sceneAbsoluteEpisodeNumber;
            this.SceneEpisodeNumber = sceneEpisodeNumber;
            this.SceneSeasonNumber = sceneSeasonNumber;
            this.UnverifiedSceneNumbering = unverifiedSceneNumbering;
            this.EndTime = endTime;
            this.GrabDate = grabDate;
            this.SeriesTitle = seriesTitle;
            this.Series = series;
            this.Images = images;
            this.Grabbed = grabbed;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets SeriesId
        /// </summary>
        [DataMember(Name = "seriesId", EmitDefaultValue = false)]
        public int SeriesId { get; set; }

        /// <summary>
        /// Gets or Sets TvdbId
        /// </summary>
        [DataMember(Name = "tvdbId", EmitDefaultValue = false)]
        public int TvdbId { get; set; }

        /// <summary>
        /// Gets or Sets EpisodeFileId
        /// </summary>
        [DataMember(Name = "episodeFileId", EmitDefaultValue = false)]
        public int EpisodeFileId { get; set; }

        /// <summary>
        /// Gets or Sets SeasonNumber
        /// </summary>
        [DataMember(Name = "seasonNumber", EmitDefaultValue = false)]
        public int SeasonNumber { get; set; }

        /// <summary>
        /// Gets or Sets EpisodeNumber
        /// </summary>
        [DataMember(Name = "episodeNumber", EmitDefaultValue = false)]
        public int EpisodeNumber { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name = "title", EmitDefaultValue = true)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets AirDate
        /// </summary>
        [DataMember(Name = "airDate", EmitDefaultValue = true)]
        public string AirDate { get; set; }

        /// <summary>
        /// Gets or Sets AirDateUtc
        /// </summary>
        [DataMember(Name = "airDateUtc", EmitDefaultValue = true)]
        public DateTime? AirDateUtc { get; set; }

        /// <summary>
        /// Gets or Sets Runtime
        /// </summary>
        [DataMember(Name = "runtime", EmitDefaultValue = false)]
        public int Runtime { get; set; }

        /// <summary>
        /// Gets or Sets FinaleType
        /// </summary>
        [DataMember(Name = "finaleType", EmitDefaultValue = true)]
        public string FinaleType { get; set; }

        /// <summary>
        /// Gets or Sets Overview
        /// </summary>
        [DataMember(Name = "overview", EmitDefaultValue = true)]
        public string Overview { get; set; }

        /// <summary>
        /// Gets or Sets EpisodeFile
        /// </summary>
        [DataMember(Name = "episodeFile", EmitDefaultValue = false)]
        public EpisodeFileResource EpisodeFile { get; set; }

        /// <summary>
        /// Gets or Sets HasFile
        /// </summary>
        [DataMember(Name = "hasFile", EmitDefaultValue = true)]
        public bool HasFile { get; set; }

        /// <summary>
        /// Gets or Sets Monitored
        /// </summary>
        [DataMember(Name = "monitored", EmitDefaultValue = true)]
        public bool Monitored { get; set; }

        /// <summary>
        /// Gets or Sets AbsoluteEpisodeNumber
        /// </summary>
        [DataMember(Name = "absoluteEpisodeNumber", EmitDefaultValue = true)]
        public int? AbsoluteEpisodeNumber { get; set; }

        /// <summary>
        /// Gets or Sets SceneAbsoluteEpisodeNumber
        /// </summary>
        [DataMember(Name = "sceneAbsoluteEpisodeNumber", EmitDefaultValue = true)]
        public int? SceneAbsoluteEpisodeNumber { get; set; }

        /// <summary>
        /// Gets or Sets SceneEpisodeNumber
        /// </summary>
        [DataMember(Name = "sceneEpisodeNumber", EmitDefaultValue = true)]
        public int? SceneEpisodeNumber { get; set; }

        /// <summary>
        /// Gets or Sets SceneSeasonNumber
        /// </summary>
        [DataMember(Name = "sceneSeasonNumber", EmitDefaultValue = true)]
        public int? SceneSeasonNumber { get; set; }

        /// <summary>
        /// Gets or Sets UnverifiedSceneNumbering
        /// </summary>
        [DataMember(Name = "unverifiedSceneNumbering", EmitDefaultValue = true)]
        public bool UnverifiedSceneNumbering { get; set; }

        /// <summary>
        /// Gets or Sets EndTime
        /// </summary>
        [DataMember(Name = "endTime", EmitDefaultValue = true)]
        public DateTime? EndTime { get; set; }

        /// <summary>
        /// Gets or Sets GrabDate
        /// </summary>
        [DataMember(Name = "grabDate", EmitDefaultValue = true)]
        public DateTime? GrabDate { get; set; }

        /// <summary>
        /// Gets or Sets SeriesTitle
        /// </summary>
        [DataMember(Name = "seriesTitle", EmitDefaultValue = true)]
        public string SeriesTitle { get; set; }

        /// <summary>
        /// Gets or Sets Series
        /// </summary>
        [DataMember(Name = "series", EmitDefaultValue = false)]
        public SeriesResource Series { get; set; }

        /// <summary>
        /// Gets or Sets Images
        /// </summary>
        [DataMember(Name = "images", EmitDefaultValue = true)]
        public List<MediaCover> Images { get; set; }

        /// <summary>
        /// Gets or Sets Grabbed
        /// </summary>
        [DataMember(Name = "grabbed", EmitDefaultValue = true)]
        public bool Grabbed { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EpisodeResource {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  SeriesId: ").Append(SeriesId).Append("\n");
            sb.Append("  TvdbId: ").Append(TvdbId).Append("\n");
            sb.Append("  EpisodeFileId: ").Append(EpisodeFileId).Append("\n");
            sb.Append("  SeasonNumber: ").Append(SeasonNumber).Append("\n");
            sb.Append("  EpisodeNumber: ").Append(EpisodeNumber).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  AirDate: ").Append(AirDate).Append("\n");
            sb.Append("  AirDateUtc: ").Append(AirDateUtc).Append("\n");
            sb.Append("  Runtime: ").Append(Runtime).Append("\n");
            sb.Append("  FinaleType: ").Append(FinaleType).Append("\n");
            sb.Append("  Overview: ").Append(Overview).Append("\n");
            sb.Append("  EpisodeFile: ").Append(EpisodeFile).Append("\n");
            sb.Append("  HasFile: ").Append(HasFile).Append("\n");
            sb.Append("  Monitored: ").Append(Monitored).Append("\n");
            sb.Append("  AbsoluteEpisodeNumber: ").Append(AbsoluteEpisodeNumber).Append("\n");
            sb.Append("  SceneAbsoluteEpisodeNumber: ").Append(SceneAbsoluteEpisodeNumber).Append("\n");
            sb.Append("  SceneEpisodeNumber: ").Append(SceneEpisodeNumber).Append("\n");
            sb.Append("  SceneSeasonNumber: ").Append(SceneSeasonNumber).Append("\n");
            sb.Append("  UnverifiedSceneNumbering: ").Append(UnverifiedSceneNumbering).Append("\n");
            sb.Append("  EndTime: ").Append(EndTime).Append("\n");
            sb.Append("  GrabDate: ").Append(GrabDate).Append("\n");
            sb.Append("  SeriesTitle: ").Append(SeriesTitle).Append("\n");
            sb.Append("  Series: ").Append(Series).Append("\n");
            sb.Append("  Images: ").Append(Images).Append("\n");
            sb.Append("  Grabbed: ").Append(Grabbed).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EpisodeResource);
        }

        /// <summary>
        /// Returns true if EpisodeResource instances are equal
        /// </summary>
        /// <param name="input">Instance of EpisodeResource to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EpisodeResource input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && 
                (
                    this.SeriesId == input.SeriesId ||
                    this.SeriesId.Equals(input.SeriesId)
                ) && 
                (
                    this.TvdbId == input.TvdbId ||
                    this.TvdbId.Equals(input.TvdbId)
                ) && 
                (
                    this.EpisodeFileId == input.EpisodeFileId ||
                    this.EpisodeFileId.Equals(input.EpisodeFileId)
                ) && 
                (
                    this.SeasonNumber == input.SeasonNumber ||
                    this.SeasonNumber.Equals(input.SeasonNumber)
                ) && 
                (
                    this.EpisodeNumber == input.EpisodeNumber ||
                    this.EpisodeNumber.Equals(input.EpisodeNumber)
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.AirDate == input.AirDate ||
                    (this.AirDate != null &&
                    this.AirDate.Equals(input.AirDate))
                ) && 
                (
                    this.AirDateUtc == input.AirDateUtc ||
                    (this.AirDateUtc != null &&
                    this.AirDateUtc.Equals(input.AirDateUtc))
                ) && 
                (
                    this.Runtime == input.Runtime ||
                    this.Runtime.Equals(input.Runtime)
                ) && 
                (
                    this.FinaleType == input.FinaleType ||
                    (this.FinaleType != null &&
                    this.FinaleType.Equals(input.FinaleType))
                ) && 
                (
                    this.Overview == input.Overview ||
                    (this.Overview != null &&
                    this.Overview.Equals(input.Overview))
                ) && 
                (
                    this.EpisodeFile == input.EpisodeFile ||
                    (this.EpisodeFile != null &&
                    this.EpisodeFile.Equals(input.EpisodeFile))
                ) && 
                (
                    this.HasFile == input.HasFile ||
                    this.HasFile.Equals(input.HasFile)
                ) && 
                (
                    this.Monitored == input.Monitored ||
                    this.Monitored.Equals(input.Monitored)
                ) && 
                (
                    this.AbsoluteEpisodeNumber == input.AbsoluteEpisodeNumber ||
                    (this.AbsoluteEpisodeNumber != null &&
                    this.AbsoluteEpisodeNumber.Equals(input.AbsoluteEpisodeNumber))
                ) && 
                (
                    this.SceneAbsoluteEpisodeNumber == input.SceneAbsoluteEpisodeNumber ||
                    (this.SceneAbsoluteEpisodeNumber != null &&
                    this.SceneAbsoluteEpisodeNumber.Equals(input.SceneAbsoluteEpisodeNumber))
                ) && 
                (
                    this.SceneEpisodeNumber == input.SceneEpisodeNumber ||
                    (this.SceneEpisodeNumber != null &&
                    this.SceneEpisodeNumber.Equals(input.SceneEpisodeNumber))
                ) && 
                (
                    this.SceneSeasonNumber == input.SceneSeasonNumber ||
                    (this.SceneSeasonNumber != null &&
                    this.SceneSeasonNumber.Equals(input.SceneSeasonNumber))
                ) && 
                (
                    this.UnverifiedSceneNumbering == input.UnverifiedSceneNumbering ||
                    this.UnverifiedSceneNumbering.Equals(input.UnverifiedSceneNumbering)
                ) && 
                (
                    this.EndTime == input.EndTime ||
                    (this.EndTime != null &&
                    this.EndTime.Equals(input.EndTime))
                ) && 
                (
                    this.GrabDate == input.GrabDate ||
                    (this.GrabDate != null &&
                    this.GrabDate.Equals(input.GrabDate))
                ) && 
                (
                    this.SeriesTitle == input.SeriesTitle ||
                    (this.SeriesTitle != null &&
                    this.SeriesTitle.Equals(input.SeriesTitle))
                ) && 
                (
                    this.Series == input.Series ||
                    (this.Series != null &&
                    this.Series.Equals(input.Series))
                ) && 
                (
                    this.Images == input.Images ||
                    this.Images != null &&
                    input.Images != null &&
                    this.Images.SequenceEqual(input.Images)
                ) && 
                (
                    this.Grabbed == input.Grabbed ||
                    this.Grabbed.Equals(input.Grabbed)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Id.GetHashCode();
                hashCode = hashCode * 59 + this.SeriesId.GetHashCode();
                hashCode = hashCode * 59 + this.TvdbId.GetHashCode();
                hashCode = hashCode * 59 + this.EpisodeFileId.GetHashCode();
                hashCode = hashCode * 59 + this.SeasonNumber.GetHashCode();
                hashCode = hashCode * 59 + this.EpisodeNumber.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.AirDate != null)
                    hashCode = hashCode * 59 + this.AirDate.GetHashCode();
                if (this.AirDateUtc != null)
                    hashCode = hashCode * 59 + this.AirDateUtc.GetHashCode();
                hashCode = hashCode * 59 + this.Runtime.GetHashCode();
                if (this.FinaleType != null)
                    hashCode = hashCode * 59 + this.FinaleType.GetHashCode();
                if (this.Overview != null)
                    hashCode = hashCode * 59 + this.Overview.GetHashCode();
                if (this.EpisodeFile != null)
                    hashCode = hashCode * 59 + this.EpisodeFile.GetHashCode();
                hashCode = hashCode * 59 + this.HasFile.GetHashCode();
                hashCode = hashCode * 59 + this.Monitored.GetHashCode();
                if (this.AbsoluteEpisodeNumber != null)
                    hashCode = hashCode * 59 + this.AbsoluteEpisodeNumber.GetHashCode();
                if (this.SceneAbsoluteEpisodeNumber != null)
                    hashCode = hashCode * 59 + this.SceneAbsoluteEpisodeNumber.GetHashCode();
                if (this.SceneEpisodeNumber != null)
                    hashCode = hashCode * 59 + this.SceneEpisodeNumber.GetHashCode();
                if (this.SceneSeasonNumber != null)
                    hashCode = hashCode * 59 + this.SceneSeasonNumber.GetHashCode();
                hashCode = hashCode * 59 + this.UnverifiedSceneNumbering.GetHashCode();
                if (this.EndTime != null)
                    hashCode = hashCode * 59 + this.EndTime.GetHashCode();
                if (this.GrabDate != null)
                    hashCode = hashCode * 59 + this.GrabDate.GetHashCode();
                if (this.SeriesTitle != null)
                    hashCode = hashCode * 59 + this.SeriesTitle.GetHashCode();
                if (this.Series != null)
                    hashCode = hashCode * 59 + this.Series.GetHashCode();
                if (this.Images != null)
                    hashCode = hashCode * 59 + this.Images.GetHashCode();
                hashCode = hashCode * 59 + this.Grabbed.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
